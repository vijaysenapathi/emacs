* Emacs Configuration
** Enable debugging the config
#+BEGIN_SRC emacs-lisp
					  ;(setq debug-on-error t)
#+END_SRC

** Basic editor window settings
#+BEGIN_SRC emacs-lisp
  ;; Disable startup message
  (setq inhibit-startup-message t)

  (menu-bar-mode -1)   ; Disable menu bar
  (tool-bar-mode -1)   ; Disable tool bar
  (scroll-bar-mode -1) ; Disable scroll bar
  (tooltip-mode -1)    ; Disable tool tip
  (set-fringe-mode 10) ; Give some breathing room

  ;; Set the default size of the frame
  (add-to-list 'default-frame-alist '(left . 300))  ; 300 on the left
  (add-to-list 'default-frame-alist '(width . 100))  ; 80 columns wide
  (add-to-list 'default-frame-alist '(height . 30)) ; 24 rows high

  ;; (setq visible-bell t); Setup a visible bell
#+END_SRC

#+RESULTS:
: ((left . 100) (height . 30) (width . 100) (vertical-scroll-bars) (left-fringe . 10) (right-fringe . 10))

** Editor base settings
#+BEGIN_SRC emacs-lisp
  (global-display-line-numbers-mode t) ; Enable line numbers
  (column-number-mode t)               ; Enable column numbers in status
  (setq require-final-newline nil)     ; Prevents the editor from going out of the line limit
#+END_SRC

#+RESULTS:

** Initialise packages
#+BEGIN_SRC emacs-lisp
  (require 'package)
  (setq package-archives '(("melpa" . "https://melpa.org/packages/")
			   ("org" . "https://orgmode.org/elpa/")
			   ("elpa" . "https://elpa.gnu.org/packages/")))
  (package-initialize)
  (unless package-archive-contents
    (package-refresh-contents))
  (unless (package-installed-p 'use-package)
    (package-install 'use-package))
  (require 'use-package)
  (setq use-package-always-ensure t)
#+END_SRC

#+RESULTS:

** Setting the theme
#+BEGIN_SRC emacs-lisp
  (unless (package-installed-p 'catppuccin-theme)
    (package-install 'catppuccin-theme))
  (load-theme 'catppuccin :no-confirm)

  ;; Setting the catpuccin flavour
  ;; flavours: 'latte, 'frappe, 'macchiato, 'mocha
  (setq catppuccin-flavor 'latte)
  (catppuccin-reload)
#+END_SRC

#+RESULTS:
: t

** Backup files and autosave
#+BEGIN_SRC emacs-lisp
  (setq make-backup-files nil)
  (setq auto-save-default nil)
#+END_SRC

#+RESULTS:

** Better scrolling
#+BEGIN_SRC emacs-lisp
  (setq scroll-conservatively 100) ; Avoid jumping when scrolling
#+END_SRC

#+RESULTS:
: 0

** Font settings
#+BEGIN_SRC emacs-lisp
  (set-face-attribute 'default nil
		      :font "JetBrainsMono Nerd Font"
		      :height 150
		      )
#+END_SRC

#+RESULTS:

** Evil mode
#+BEGIN_SRC emacs-lisp
  ;; Install evil 
  (unless (package-installed-p 'evil)
    (package-install 'evil))
  ;; Enable evil
  (require 'evil)
  (evil-mode 1)
  (evil-version)
#+END_SRC

#+RESULTS:
: Evil version 1.15.0

** Org mode appearance
#+BEGIN_SRC emacs-lisp
  (require 'org-indent)
  ;; (add-hook 'org-mode-hook 'org-indent-mode)
  (setq org-hide-leading-stars t)
  (unless (package-installed-p 'org-bullets)
    (package-install 'org-bullets))

  (require 'org-bullets)
  ;; (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
  (setq org-bullets-bullet-list
	'("󱗽" "󱗽" "󱗽" "󱗽" "󱗽" "󱗽"))

  ;; adding hooks for both indent and bullets mode
  (add-hook 'org-mode-hook (lambda ()
			     (org-indent-mode 1)
			     (org-bullets-mode 1)
			     ))

#+END_SRC

#+RESULTS:
: t

** Org download
#+BEGIN_SRC emacs-lisp
  ;; This package allows us to drag drop images
  (unless (package-installed-p 'org-download)
    (package-install 'org-download))

  (require 'org-download)
#+END_SRC

#+RESULTS:
: org-download

** Open config on startup
#+BEGIN_SRC emacs-lisp
  (find-file (expand-file-name "~/.config/emacs/config.org"))
#+END_SRC

#+RESULTS:
: #<buffer config.org>

** Testing orgmode
#+BEGIN_SRC emacs-lisp
  ;; (load-file (expand-file-name "./org-bullets.el"))
#+END_SRC

#+RESULTS:
| (lambda nil (org-bullets-mode 1)) | org-indent-mode | #[0 \300\301\302\303\304$\207 [add-hook change-major-mode-hook org-fold-show-all append local] 5] | #[0 \300\301\302\303\304$\207 [add-hook change-major-mode-hook org-babel-show-result-all append local] 5] | org-babel-result-hide-spec | org-babel-hide-all-hashes |

